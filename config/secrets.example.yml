development:
  # The secret_key_base is used as the input secret to the application's key generator,
  # which in turn is used to create all MessageVerifiers/MessageEncryptors,
  # including the ones that sign and encrypt cookies.
  # Generate a secret key from the command line with the command 'rake secret'.
  # https://api.rubyonrails.org/classes/Rails/Application.html#method-i-secret_key_base
  secret_key_base:

  # The database password can be removed from the config/database.yml file by
  # replacing it with a call to the secrets file and adding the password here.
  # Add 'password: Rails.application.secrets[:database_password]' to config/database.yml.
  # database_password: # <DATABASE_PASSWORD>

  # Keep the secrets associated with your storage here in config/secrets.yml.
  # The example below uses Amazon S3 Service, but you could use Microsoft
  # Azure or Google Cloud as long as it is configured properly both
  # here in config/secrets.yml and config/storage.yml.
  # More information on configuring these other services can be found in the rails docs.
  # https://guides.rubyonrails.org/v5.2.0/active_storage_overview.html
  aws_access_key_id:
  aws_secret_access_key:

  # Below are the SMTP settings for ActionMailer.
  # Here they are configured for mailcatcher (https://mailcatcher.me).
  # Descriptions of each of the settings can be found in the rails docs,
  # although your institution may have its own guidelines for these settings.
  # https://guides.rubyonrails.org/v5.2.0/action_mailer_basics.html#action-mailer-configuration
  smtp_settings: { address:                '127.0.0.1',
                   port:                   1025,
                   domain:                 ,
                   user_name:              ,
                   password:               ,
                   authentication:         ,
                   enable_starttls_auto:   ,
                   ssl:                     }

  # Add the Certificate information for your SAML IDP.
  # Certificate fingerprint (idp_cert_fingerprint) and algorithm (idp_cert_fingerprint_algorithm)
  # Or the certificate itself (idp_cert)
  idp_cert:

test:
  secret_key_base:
  database_password:
  aws_access_key_id:
  aws_secret_access_key:
  smtp_settings: { address:                '127.0.0.1',
                   port:                   1025,
                   domain:                 ,
                   user_name:              ,
                   password:               ,
                   authentication:         ,
                   enable_starttls_auto:   ,
                   ssl:                     }
  idp_cert: