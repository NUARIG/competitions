- disabled = review.review_period_closed?

- if disabled == true
  .callout.warning
    Review period is closed

= form_for review, url: grant_submission_review_url(grant, submission, review), html: { novalidate: true }, local: true, data: { turbo: false } do |f|
  - if review.criteria_reviews.any?
    %h3
      Review Criteria
    %p
      Please score this submission using the following criteria:
    - review.criteria_reviews.each_with_index do |criterion_review, i|
      = f.fields_for :criteria_reviews, criterion_review do |criterion_review_fields|
        = render partial: 'criterion', locals: { ff: criterion_review_fields, criterion_review: criterion_review, disabled: disabled, criterion_index: i}

  = render partial: 'overall_impact', locals: { f: f, disabled: disabled }

  .actions
    = f.button 'Save as Draft', name: 'review[state]', value: Review::REVIEW_STATES[:draft], type: 'submit', disabled: disabled, data: { confirm: "You are saving this review as a draft. Scores here will not count toward the submission until this review has been submitted. You may submit it until #{date_mmddyyyy(grant.review_close_date)}.", disable_with: 'Please wait'}, class: 'secondary button'
    = f.button 'Submit Your Review', name: 'review[state]', value: Review::REVIEW_STATES[:submitted], type: 'submit', disabled: disabled, data: { disable_with: "Please wait..." }, class: 'success button'
    
