- content_for(:page_title, "Reviews of #{@submission.title}")

%h1
  = @grant.name

= render 'shared/grant_edit_tabbed_menu', { grant: @submission.grant }

.tabs-panel.is-active
  %h3
    Reviews
    %span.pdf-hide
      of
      = @submission.title

  #reviews-overview.grid-container-x
    .grid-x
      .cell.small-12.medium-2
        %strong
          Applicant:
      .cell.small-12.medium-10
        = full_name(@submission.applicant)
    .grid-x
      .cell.small-12.medium-2
        %strong
          Submission:
      .cell.small-12.medium-10
        = link_to @submission.title, grant_submission_path(@submission.grant, @submission)

    #pdf.grid-container-x.pdf-hide
      .grid-x.grid-margin-y
        .cell.small-12
          %p.small
            = link_to "Save this page as a PDF #{image_tag 'PDF_24.png', class: 'icon' }".html_safe, grant_submission_reviews_path(@grant, @submission, { format: 'pdf' } )



    .grid-x.grid-padding-y
      .cell.small-12
        - if @reviews.empty?
          %p
            - if @submission.submitted?
              There are no reviews for this submission.
              = link_to 'Assign it to a reviewer', grant_reviewers_path(@grant)
            - elsif @submission.draft?
              This submission must be completed before it can be reviewed.
        - else

          = render 'shared/pagy_header', locals: { pagy: @pagy }

          %table.hover.stack
            %thead
              %tr
                %th
                  = sort_link(@q, :reviewer_last_name, 'Reviewer',{}, {title: 'Sort on Reviewer'})
                %th.pdf-hide
                  = sort_link(@q, :overall_impact, 'Review',{}, {title: 'Sort on Completed'})
                %th
                  = sort_link(@q, :overall_impact,{}, {title: 'Sort on Overall Impact Score'})
                %th
                  Composite
                - @grant.criteria.each do |criterion|
                  %th= criterion.name
            %tbody
              = render @reviews

    - if @reviews.completed.any?

      .grid-x.grid-padding-y
        .cell.small-12
          %h3
            Criteria Scores and Comments

      - @grant.criteria.each do |criterion|
        .grid-x.grid-y.criterion
          .row
            .cell.small-12
              %h5{id: "criterion-#{criterion.id}"}
                = criterion.name
          .row
            .cell.small-12.reviews
              - @reviews.completed.each do |review|
                .grid-x.grid-margin-x.review{id: "review-#{review.id}" }
                  .cell.small-12.medium-2.reviewer.text-right
                    = full_name(review.reviewer)
                  .cell.small-12.medium-10.responses
                    .grid-y
                      - scored_criterion = review.criteria_reviews.to_a.detect {|score| score.criterion_id == criterion.id}
                      .row{id: "criterion-#{criterion.id}-score"}
                        - if scored_criterion.score.present?
                          = scored_criterion.score
                        - else
                          %span{ title: 'No Score' }
                            NS
                      - if scored_criterion.comment.present?
                        .row{id: "criterion-#{criterion.id}-comment"}
                          = simple_format(scored_criterion.comment)


      .grid-x.grid-padding-y
        .cell.small-12
          %h3#overall-impact
            Overall Impact Scores and Comments

          #overall-impact.grid-x.grid-y
            .row
              .cell.small-12.reviews
                - @reviews.completed.each do |review|
                  .grid-x.grid-margin-x.review
                    .cell.small-12.medium-2.reviewer
                      = full_name(review.reviewer)
                    .cell.small-12.medium-10.responses
                      .grid-y
                        .row
                          = review.overall_impact_score
                        .row
                          = review.overall_impact_comment
